"""
Django settings for tealeafdjangoproj project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# this works when .env is in parent directory of settings.py
dotenv_path = BASE_DIR / ".env"
load_dotenv(dotenv_path)
SECRET_KEY = os.getenv("SECRET_KEY")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/


# Detect if running on PythonAnywhere
if "PYTHONANYWHERE_DOMAIN" in os.environ:
    print("PYTHONANYWHERE environment is detected")
    ALLOWED_HOSTS = [
        "webdevpony.pythonanywhere.com",
        # "www.yourcustomdomain.com"
    ]
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False

else:
    print("PYTHONANYWHERE environment is not detected")
    ALLOWED_HOSTS = ["*"]
    DEBUG = True

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "firstapp",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # enforces Content Security Policy to prevent XSS attacks by specifying trusted content sources. more settings below
    "csp.middleware.CSPMiddleware",
    ...
    ]


ROOT_URLCONF = "tealeafdjangoproj.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "firstapp.context_processors.website_name",  # variable becomes universally available
                "firstapp.context_processors.categories",  # for dynamically populating the navigation bar
            ],
        },
    },
]

WSGI_APPLICATION = "tealeafdjangoproj.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Media files
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

################### EMAIL SETTINGS ###################
# email settings for contact.html form
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = os.getenv("EMAIL_PORT")
EMAIL_USE_TLS = True  # security: encrypt data from django to email
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv(
    "EMAIL_HOST_PASSWORD"
)  # enable gmail 2-factor auth then https://myaccount.google.com/apppasswords


################### SECURITY SETTINGS ###################

# https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/#https
# Configure Django Settings for Secure Cookies
# Use a secure CSRF cookie
# Set this to True to avoid transmitting the CSRF cookie over HTTP accidentally.
CSRF_COOKIE_SECURE = True
# Use a secure session cookie
# Set this to True to avoid transmitting the session cookie over HTTP accidentally.
SESSION_COOKIE_SECURE = True
# validate:
# visit http://webdevpony.pythonanywhere.com/ and see if it redirects to https://webdevpony.pythonanywhere.com/



# Content Security Policy settings to prevent XSS.
CSP_DEFAULT_SRC = ("'self'",)  # Restricts all content sources to the same origin, preventing the inclusion of malicious content.
CSP_STYLE_SRC = (
    "'self'", 
    "https://cdnjs.cloudflare.com",  # Allows stylesheets from cdnjs
    "https://cdn.jsdelivr.net",  # Allows stylesheets from jsdelivr
    "https://fonts.googleapis.com"  # Allows stylesheets from Google Fonts
)  # Specifies trusted sources for styles, preventing the inclusion of untrusted stylesheets.
CSP_SCRIPT_SRC = (
    "'self'", 
    "https://cdn.jsdelivr.net"  # Allows scripts from jsdelivr
)  # Specifies trusted sources for scripts, preventing the inclusion of untrusted scripts.
CSP_FONT_SRC = ("'self'", "https://fonts.googleapis.com", "https://fonts.gstatic.com")  # Specifies trusted sources for fonts, ensuring only fonts from trusted sources are loaded.
CSP_IMG_SRC = ("'self'", "data:")  # Allows images from the same origin and inline images (data URIs).
CSP_CONNECT_SRC = ("'self'",)  # Restricts connections to the same origin, preventing unauthorized data exfiltration.
CSP_FRAME_SRC = ("'none'",)  # Prevents the site from being embedded in a frame, further protecting against clickjacking.
